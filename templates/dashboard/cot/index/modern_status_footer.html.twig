<!-- Modern Fixed Status Footer -->
<footer class="bg-dark text-light shadow-lg" id="status-footer">
    <div class="container-fluid px-4 py-2">
        <div class="row align-items-center">
            <!-- Device Statistics -->
            <div class="col-lg-4 col-md-6">
                <div class="d-flex align-items-center gap-3">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-database text-info me-1"></i>
                        <span class="small">Total:</span>
                        <span id="total_devices_count" class="badge bg-info ms-1">{{ dispositivos|length }}</span>
                    </div>
                    <div class="d-flex align-items-center">
                        <i class="fas fa-check-circle text-success me-1"></i>
                        <span class="small">Activos:</span>
                        <span id="active_devices_count" class="badge bg-success ms-1">{{ active_devices_count ?? 0 }}</span>
                    </div>
                    <div class="d-flex align-items-center">
                        <i class="fas fa-exclamation-triangle text-danger me-1"></i>
                        <span class="small">Inactivos:</span>
                        <span id="unactive_devices_count" class="badge bg-danger ms-1">{{ unactive_devices_count ?? 0 }}</span>
                    </div>
                </div>
            </div>

            <!-- System Status -->
            <div class="col-lg-4 col-md-6 text-center">
                <div class="d-flex align-items-center justify-content-center gap-3 d-none">
                    <div class="d-flex align-items-center">
                        <div id="connection-indicator" class="status-indicator bg-success me-2"></div>
                        <span class="small">Estado:</span>
                        <span id="connection_status" class="badge bg-success ms-1">Online</span>
                    </div>

                    <!-- Auto-refresh indicator with icon -->
                    <div class="d-flex align-items-center" id="auto-refresh-status">
                        <i class="fas fa-sync-alt text-success me-1 rotating" id="auto-refresh-icon" title="Auto-actualización activa"></i>
                    </div>

                    <!-- Performance indicator -->
                    <div class="d-flex align-items-center">
                        <i class="fas fa-tachometer-alt text-warning me-1"></i>
                        <small>Rendimiento:</small>
                        <span id="performance-indicator" class="badge bg-warning ms-1">Óptimo</span>
                    </div>
                </div>
            </div>

            <!-- Timestamps - Right Side -->
            <div class="col-lg-4 col-md-12 text-end">
                <div class="d-flex align-items-center justify-content-end gap-3">
                    <!-- Server time -->
                    <div class="d-flex align-items-center d-none">
                        <i class="fas fa-clock text-secondary me-1"></i>
                        <small>Servidor:</small>
                        <span id="server-time" class="badge bg-secondary ms-1">{{ "now"|date("H:i:s") }}</span>
                    </div>

                    <!-- IP update time -->
                    <div class="d-flex align-items-center">
                        <i class="fas fa-sync-alt text-info me-1 d-none" id="refresh-icon"></i>
                        <small>Última Actualización IP:</small>
                        <span id="datetime_update" class="badge bg-info ms-1">{{ SwIpDevicesMonitorLastUpdateDateTime ? SwIpDevicesMonitorLastUpdateDateTime|date("d-m-Y H:i:s") : "now"|date("d-m-Y H:i:s") }}</span>
                    </div>

                    <!-- Stentofon update time -->
                    <div class="d-flex align-items-center">
                        <i class="fas fa-phone text-info me-1 d-none"></i>
                        <small>Act Stentofon:</small>
                        <span id="stentofon-time" class="badge bg-info ms-1">{{ StentofonLastUpdateDateTime ? StentofonLastUpdateDateTime|date("d-m-Y H:i:s") : "now"|date("d-m-Y H:i:s") }}</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>

<!-- Add padding to body to account for fixed footer -->
<style>
body {
    padding-bottom: 70px; /* Adjust based on footer height */
}

#status-footer {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    margin-left: var(--sidebar-width, 250px);
    z-index: 1030;
    border-top: 2px solid #0d6efd;
    background: linear-gradient(135deg, #212529 0%, #343a40 100%) !important;
}

.status-indicator {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    display: inline-block;
    position: relative;
}

.status-indicator.bg-success {
    animation: pulse-success 2s infinite;
}

@keyframes pulse-success {
    0% {
        box-shadow: 0 0 0 0 rgba(40, 167, 69, 0.7);
    }
    70% {
        box-shadow: 0 0 0 10px rgba(40, 167, 69, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(40, 167, 69, 0);
    }
}

.status-indicator.bg-danger {
    animation: pulse-danger 2s infinite;
}

@keyframes pulse-danger {
    0% {
        box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.7);
    }
    70% {
        box-shadow: 0 0 0 10px rgba(220, 53, 69, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(220, 53, 69, 0);
    }
}

#refresh-icon.rotating,
#auto-refresh-icon.rotating {
    animation: spin 1s linear infinite;
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

/* EasyAdmin sidebar width adjustments */
body.ea-sidebar-width-compact #status-footer {
    margin-left: 60px; /* Compact sidebar width */
}

/* Responsive adjustments */
@media (max-width: 992px) {
    #status-footer {
        margin-left: 0; /* No sidebar on mobile */
    }

    body.ea-sidebar-width-compact #status-footer {
        margin-left: 0; /* Override compact on mobile */
    }
}

@media (max-width: 768px) {
    body {
        padding-bottom: 90px;
    }

    #status-footer .container-fluid {
        padding-left: 1rem;
        padding-right: 1rem;
    }

    #status-footer .row > div {
        margin-bottom: 0.25rem;
    }

    #status-footer .col-lg-4:last-child {
        text-align: center !important;
    }
}

@media (max-width: 576px) {
    body {
        padding-bottom: 110px;
    }

    #status-footer .d-flex {
        flex-wrap: wrap;
        gap: 0.5rem !important;
    }

    #status-footer .badge {
        font-size: 0.75em;
    }
}
</style>

<script>
class ModernStatusFooter {
    constructor() {
        this.updateInterval = null;
        this.init();
    }

    init() {
        this.startServerTimeUpdate();
        this.updatePerformanceFromCounts();
    }

    startServerTimeUpdate() {
        // Simple client time update every second
        this.updateInterval = setInterval(() => {
            this.updateServerTime();
        }, 1000);
    }

    updateServerTime() {
        // Simple client time in 24h format
        const now = new Date();
        const timeString = now.toLocaleTimeString('es-CL', {
            hour12: false,
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit'
        });

        const serverTimeEl = document.getElementById('server-time');
        if (serverTimeEl) {
            serverTimeEl.textContent = timeString;
        }
    }

    updatePerformanceFromCounts() {
        // Calculate performance from existing footer counts
        const activeEl = document.getElementById('active_devices_count');
        const inactiveEl = document.getElementById('unactive_devices_count');
        const perfEl = document.getElementById('performance-indicator');

        if (!activeEl || !inactiveEl || !perfEl) return;

        const activeCount = parseInt(activeEl.textContent || 0);
        const inactiveCount = parseInt(inactiveEl.textContent || 0);
        const totalCount = activeCount + inactiveCount;
        const activePercentage = totalCount > 0 ? (activeCount / totalCount) * 100 : 0;

        if (activePercentage >= 90) {
            perfEl.textContent = 'Óptimo';
            perfEl.className = 'badge bg-success ms-1';
        } else if (activePercentage >= 70) {
            perfEl.textContent = 'Bueno';
            perfEl.className = 'badge bg-warning ms-1';
        } else if (activePercentage >= 50) {
            perfEl.textContent = 'Regular';
            perfEl.className = 'badge bg-warning ms-1';
        } else {
            perfEl.textContent = 'Crítico';
            perfEl.className = 'badge bg-danger ms-1';
        }
    }

    destroy() {
        if (this.updateInterval) {
            clearInterval(this.updateInterval);
        }
    }
}

// Initialize when DOM is ready
document.addEventListener('DOMContentLoaded', () => {
    window.modernStatusFooter = new ModernStatusFooter();
});

// Simple integration - just connect to existing elements
document.addEventListener('DOMContentLoaded', () => {
    // Connect footer elements to existing system elements that already get updated
    const connectFooterToSystem = () => {
        const activeSystemEl = document.getElementById('count_active_devices');
        const inactiveSystemEl = document.getElementById('count_unactive_devices');
        const activeFooterEl = document.getElementById('active_devices_count');
        const inactiveFooterEl = document.getElementById('unactive_devices_count');
        const totalFooterEl = document.getElementById('total_devices_count');

        if (activeSystemEl && activeFooterEl) {
            activeFooterEl.textContent = activeSystemEl.textContent;
        }
        if (inactiveSystemEl && inactiveFooterEl) {
            inactiveFooterEl.textContent = inactiveSystemEl.textContent;
        }
        if (activeFooterEl && inactiveFooterEl && totalFooterEl) {
            const total = parseInt(activeFooterEl.textContent || 0) + parseInt(inactiveFooterEl.textContent || 0);
            totalFooterEl.textContent = total.toString();
        }

        // Update performance indicator when counts change
        if (window.modernStatusFooter) {
            window.modernStatusFooter.updatePerformanceFromCounts();
        }
    };

    // Update footer when system elements change
    const observer = new MutationObserver(connectFooterToSystem);
    const activeEl = document.getElementById('count_active_devices');
    const inactiveEl = document.getElementById('count_unactive_devices');

    if (activeEl) observer.observe(activeEl, { childList: true, subtree: true });
    if (inactiveEl) observer.observe(inactiveEl, { childList: true, subtree: true });

    // Initial sync
    connectFooterToSystem();
});
</script>